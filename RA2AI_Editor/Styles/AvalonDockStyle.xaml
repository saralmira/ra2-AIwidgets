<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <DataTemplate x:Key="AvalonDock_HeaderTemplate">
        <Grid MinHeight="30">
            <Border x:Name="bd" Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0 0 0 0"
                                CornerRadius="0,0,0,0"
                                Margin="0">
                <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="30 0 30 0"/>
            </Border>
        </Grid>
    </DataTemplate>
    
    <Style x:Key="AvalonDock_DocumentPaneControlStyle" TargetType="{x:Type LayoutDocumentPaneControl}">
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type LayoutDocumentPaneControl}">
                    <Grid
						ClipToBounds="true"
						KeyboardNavigation.TabNavigation="Local"
						SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Grid Panel.ZIndex="1" Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type LayoutDocumentPaneControl}}, Path=Model.ShowHeader, Converter={BoolToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DocumentPaneTabPanel
								x:Name="HeaderPanel"
								Grid.Row="0"
								Grid.Column="0"
								Margin="2,0,2,0"
								IsItemsHost="true"
								KeyboardNavigation.TabIndex="1" 
                                Background="#0787DC"/>
                        </Grid>
                        <Border
							x:Name="ContentPanel"
							Grid.Row="1"
							Grid.Column="0"
							Padding="0,1,0,2"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							KeyboardNavigation.DirectionalNavigation="Contained"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
								x:Name="PART_SelectedContentHost"
								Margin="0,2,0,2"
								ContentSource="SelectedContent"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Foreground" Value="#EAEAEA" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Padding" Value="4" />
                    <Setter Property="Margin" Value="2,0,2,0" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid Margin="0,0,0,0" SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="5"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="1" Background="{TemplateBinding Background}"/>
                                    <ContentPresenter
										x:Name="Content"
                                        Grid.Row="1"
										Margin="2"
										HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
										ContentSource="Header"
										RecognizesAccessKey="True"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter Property="Background" Value="#33ffffff" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </Trigger>

                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter Property="Background" Value="#33ffffff" />
                                        <Setter Property="Foreground" Value="#FFF" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="Selector.IsSelected" Value="false" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Foreground" Value="#FFF" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <LayoutDocumentTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <LayoutDocumentControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AvalonDock_AnchorablePaneControlStyle" TargetType="{x:Type LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="{Binding Model.Root.Manager.Background, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type LayoutAnchorablePaneControl}">
                    <Grid
						ClipToBounds="true"
						KeyboardNavigation.TabNavigation="Local"
						SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <!--  Following border is required to catch mouse events  -->
                        <Border Grid.RowSpan="2" Background="Transparent" />
                        <Border
							x:Name="ContentPanel"
							Grid.Row="0"
							Grid.Column="0"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							KeyboardNavigation.DirectionalNavigation="Contained"
							KeyboardNavigation.TabIndex="2"
							KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter
								x:Name="PART_SelectedContentHost"
								Margin="{TemplateBinding Padding}"
								ContentSource="SelectedContent"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <AnchorablePaneTabPanel
							x:Name="HeaderPanel"
							Grid.Row="1"
							Margin="0,0,2,2"
							Panel.ZIndex="1"
							IsItemsHost="true"
							KeyboardNavigation.TabIndex="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                            <Setter TargetName="HeaderPanel" Property="Margin" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style  TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Setter Property="Foreground" Value="#EAEAEA" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="ToolTip" Value="{Binding ToolTip}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border
								x:Name="bd"
								Margin="4"
								Padding="{TemplateBinding Padding}"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="0,0,0,0">
                                        <ContentPresenter
								x:Name="Content"
								HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
								VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
								ContentSource="Header"
								RecognizesAccessKey="True"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                        <Setter Property="Foreground" Value="#fff"/>
                                    </Trigger>

                                    <DataTrigger Binding="{Binding IsActive}" Value="True">
                                        <Setter Property="BorderBrush" Value="#0787DC" />
                                        <Setter Property="Background" Value="#31A9F9" />
                                        <Setter Property="Foreground" Value="#333333" />
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                    </DataTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="Selector.IsSelected" Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="#0787DC" />
                                        <Setter Property="Background" Value="#82CAFB" />
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                        <Setter Property="Foreground" Value="#fff"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <LayoutAnchorableTabItem Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <LayoutAnchorableControl Model="{Binding}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    

</ResourceDictionary>